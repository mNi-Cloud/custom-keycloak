name: Build Custom Keycloak Image

on:
  workflow_dispatch:
    inputs:
      plugin_version:
        description: 'Plugin version to use'
        required: true
        type: string
        default: 'latest'
      theme_version:
        description: 'Theme version to use'
        required: true
        type: string
        default: 'latest'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/mni-cloud/keycloak
          tags: latest

      - name: Download plugin artifact
        run: |
          VERSION=${{ inputs.plugin_version }}
          if [ "$VERSION" = "latest" ]; then
            VERSION=$(curl -s https://api.github.com/repos/${{ github.repository_owner }}/keycloak-registration-hook/releases/latest | jq -r .tag_name | sed 's/v//')
          fi
          curl -L -o reghook.jar "https://github.com/${{ github.repository_owner }}/keycloak-registration-hook/releases/download/v${VERSION}/reghook-${VERSION}.jar"

      - name: Download theme artifact
        run: |
          VERSION=${{ inputs.theme_version }}
          if [ "$VERSION" = "latest" ]; then
            VERSION=$(curl -s https://api.github.com/repos/${{ github.repository_owner }}/keycloak-custom-theme/releases/latest | jq -r .tag_name | sed 's/v//')
          fi
          curl -L -o custom-theme.jar "https://github.com/${{ github.repository_owner }}/keycloak-custom-theme/releases/download/v${VERSION}/keycloak-theme-for-kc-22-and-above.jar"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PLUGIN_VERSION=${{ inputs.plugin_version }}
            THEME_VERSION=${{ inputs.theme_version }}
